[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Syuu8\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Syuu8\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 11.0.16.1)
[debug]       Load.loadUnit: plugins took 101.0648ms
[debug]       Load.loadUnit: defsScala took 0.2534ms
[debug] [Loading] Scanning directory C:\Users\Syuu8\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Syuu8\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.9372 ms
[debug]           Load.resolveProject(global-plugins) took 44.7451ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Syuu8\.sbt\1.0\plugins, plugins: List(<none>))) took 94.989ms
[debug] [Loading] Done in C:\Users\Syuu8\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 111.7061ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1874ms
[debug]     Load.loadUnit(file:/C:/Users/Syuu8/.sbt/1.0/plugins/, ...) took 221.4802ms
[debug]   Load.apply: load took 356.5966ms
[debug]   Load.apply: resolveProjects took 4.7613ms
[debug]   Load.apply: finalTransforms took 34.8402ms
[debug]   Load.apply: config.delegates took 4.2337ms
[debug]   Load.apply: Def.make(settings)... took 207.8124ms
[debug]   Load.apply: structureIndex took 52.253ms
[debug]   Load.apply: mkStreams took 0.998ms
[info] loading global plugins from C:\Users\Syuu8\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1397.022ms
[debug]           Load.loadUnit: plugins took 18.1597ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo\project
[debug]             Load.loadUnit: mkEval took 5.1301ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1327 ms
[info] loading settings for project finalproject-youtubetrendingvideo-build from idea.sbt ...
[debug]               Load.resolveProject(finalproject-youtubetrendingvideo-build) took 1.7038ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalproject-youtubetrendingvideo-build, base: D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo\project, plugins: List(<none>))) took 3.1964ms
[debug] [Loading] Done in D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo\project, returning: (finalproject-youtubetrendingvideo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1229.9426ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.4323ms
[debug]         Load.loadUnit(file:/D:/YouTube-Analysis/FinalProject-YoutubeTrendingVideo/project/, ...) took 1251.1265ms
[debug]       Load.apply: load took 1251.8933ms
[debug]       Load.apply: resolveProjects took 0.07ms
[debug]       Load.apply: finalTransforms took 4.7163ms
[debug]       Load.apply: config.delegates took 0.2219ms
[debug]       Load.apply: Def.make(settings)... took 36.6326ms
[debug]       Load.apply: structureIndex took 15.9086ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2941.0681ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo
[debug]       Load.loadUnit: mkEval took 0.1727ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1872 ms
[info] loading settings for project finalproject-youtubetrendingvideo from build.sbt ...
[debug]         Load.resolveProject(finalproject-youtubetrendingvideo) took 17.92ms
[debug]       Load.loadTransitive: finalizeProject(Project(id finalproject-youtubetrendingvideo, base: D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo, plugins: List(<none>))) took 19.9239ms
[debug] [Loading] Done in D:\YouTube-Analysis\FinalProject-YoutubeTrendingVideo, returning: (finalproject-youtubetrendingvideo)
[debug]     Load.loadUnit: loadedProjectsRaw took 696.1593ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.0476ms
[debug]   Load.loadUnit(file:/D:/YouTube-Analysis/FinalProject-YoutubeTrendingVideo/, ...) took 3645.6818ms
[debug] Load.apply: load took 3646.641ms
[debug] Load.apply: resolveProjects took 0.079ms
[debug] Load.apply: finalTransforms took 14.4341ms
[debug] Load.apply: config.delegates took 0.1779ms
[debug] Load.apply: Def.make(settings)... took 41.3328ms
[debug] Load.apply: structureIndex took 11.5916ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to FinalProject-YoutubeTrendingVideo (in build file:/D:/YouTube-Analysis/FinalProject-YoutubeTrendingVideo/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63509 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63509, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FinalProject-YoutubeTrendingVideo (in build file:/D:/YouTube-Analysis/FinalProject-YoutubeTrendingVideo/)
[debug] > Exec(idea-shell, None, None)
